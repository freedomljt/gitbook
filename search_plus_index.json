{"./":{"url":"./","title":"Introduction","keywords":"","body":"介绍 这是我个人使用的小文档，用来记录一些琐碎的东西，学习文档之类的 Copyright © Toobe 2020 all right reserved，powered by Gitbook修改时间 2020-03-17 12:21:01 "},"About GitBook/Gitbook.html":{"url":"About GitBook/Gitbook.html","title":"发布到Github pages","keywords":"","body":"发布到Github pages touch .gitignore echo \"_book\" >> .gitignore git add .gitignore git commit -m \"Ignore book\" gitbook build cp -r _book/* . git add . git commit -m \"Publish\" Copyright © Toobe 2020 all right reserved，powered by Gitbook修改时间 2020-03-17 14:29:13 "},"About GitBook/Plugins/isummary.html":{"url":"About GitBook/Plugins/isummary.html","title":"gitbook-plugin-isummary","keywords":"","body":"gitbook-plugin-isummary 自动根据目录创建SUMMARY.md文件，能忽略指定路径。 Github book.json { \"plugins\": [ \"isummary\" ], \"pluginsConfig\": { \"isummary\": { \"ignorePath\": [\"assets\"] } } } Copyright © Toobe 2020 all right reserved，powered by Gitbook修改时间 2020-03-23 09:45:11 "},"About GitBook/常用插件.html":{"url":"About GitBook/常用插件.html","title":"Gitbook 常用插件","keywords":"","body":"Gitbook 常用插件 Copyright © Toobe 2020 all right reserved，powered by Gitbook修改时间 2020-03-17 14:36:19 "},"Docker/1-常用命令.html":{"url":"Docker/1-常用命令.html","title":"Docker常用命令","keywords":"","body":"Docker常用命令 清理none镜像 docker rmi $(docker images --filter \"dangling=true\" -q --no-trunc) 停止所有容器 docker stop $(docker ps -aq) 删除所有容器 docker rm $(docker ps -aq) 删除所有镜像 docker rmi $(docker images -q) 按照镜像名称删除镜像 docker rmi $(docker images |grep 'imagename') Copyright © Toobe 2020 all right reserved，powered by Gitbook修改时间 2020-03-23 14:12:38 "},"Docker/2-Dockerfile.html":{"url":"Docker/2-Dockerfile.html","title":"Dockerfile 语法","keywords":"","body":"Dockerfile 语法 if then if, if then elif fi, if then else fi demo if [ confition ] then block_of_statements fi Numeric and StringComparison age=21 if [ $age -gt 18 ] then echo \"You are old enough to drive in most places.\" fi Numeric Comparison Returns true (0) if: [ $num1 -eq $num2 ] num1 equals num2 [ $num1 -ne $num2 ] num1 does not equal num2 [ $num1 -lt $num2 ] num1 is less than num2 [ $num1 -gt $num2 ] num1 is greater than num2 [ $num1 -le $num2 ] num1 is less than or equal to num2 [ $num1 -ge $num2 ] num1 is greater than or equal to num2 name=John if [ $string = \"John\" ] then echo \"John is here !!!\" fi String Comparison Returns true (0) if: [ str1 = str2 ] str1 equals str2 [ str1 != str2 ] str1 does not equal str2 [ str1 str1 precedes str2 in lexical order [ str1 > str2 ] str1 follows str2 in lexical order [ -Z str1 ] str1 has length zero (holds null value) [ -nstr1 ] str1has nonzero length (contains one or more characters) if then else statement if [ condition ] then block_of_statements else block_of_statements fi total=100 if [ $total -eq 100 ]; then echo \"total is equal to 100\" else echo \"total is not equal to 100\" fi if/then/elif/else statement if [ condition 1 ] then block_of_statements elif [ condition 2 ] then block_of_statements else block_of_statements fi total=100 if [ $total -eq 100 ] then echo \"total is equal to 100\" elif [ $total -lt 100 ] then echo \"total is less than 100\" else echo \"total is greater than 100\" fi name=snoopy if [ \"$name\" = \"snoopy\" ] then echo \"It was a dark and stormy night.\" elif [ \"$name\" == \"charlie\" ] then echo \"You’re a good man Charlie Brown.\" elif [ \"$name\" == \"lucy\" ] then echo \"The doctor is in.\" elif [ \"$name\" == \"schroeder\" ] then echo \"In concert.\" else echo \"Not a Snoopy character.\" fi Nested if statements if [ $# -ne 1 ] then echo \"You need to enter the year.\" exit 1 fi year=$1 if [ $[$year % 400] -eq \"0\" ] then echo \"$year is a leap year!\" elif [ $[$year % 4] -eq 0 ] then if [ $[$year % 100] -ne 0 ] then echo \"$year is a leap year!\" else echo \"$year is not a leap year.\" fi else echo \"$year is not a leap year.\" fi Multiple conditions in if loop (Boolean Operators) num=150 if [ $num -gt 100 ] && [ $num -lt 200 ] then echo \"The number lies between 100 and 200\" fi Copyright © Toobe 2020 all right reserved，powered by Gitbook修改时间 2020-04-08 14:36:58 "},"Frontend/1-scrollbar.html":{"url":"Frontend/1-scrollbar.html","title":"Scrollbar style","keywords":"","body":"Scrollbar style 定义滚动条主题(代码中是仿Mac浏览器的滚动条) ::-webkit-scrollbar-track { width: 15px; background-color: #fafafa; border: 1px solid #e9e8e9; } ::-webkit-scrollbar-thumb { width: 8px; background-color: #c7c7c7; } ::-webkit-scrollbar-thumb:hover { background: #878787; } Copyright © Toobe 2020 all right reserved，powered by Gitbook修改时间 2020-03-26 11:57:57 "},"Frontend/2-axios-cancel.html":{"url":"Frontend/2-axios-cancel.html","title":"Axios interceptor 中取消重复请求","keywords":"","body":"Axios interceptor 中取消重复请求 在系统中，有这么一个业务场景，当用户搜索时，因没有做好防抖，所以用户每输入一个字符就发起一个异步请求，每个请求的返回时间顺序不可预估，导致最终的返回的结果不一定是最后一次查询的结果。 // 创建对象 let doingRequest = {}; axios.interceptors.request.use(config => { // 增加参数配置控制是否启动取消机制，默认为true const { cancellation = true, method, url } = config; // 默认标记是请求方法+请求地址 const mark = `${method}-${url}`; if (doingRequest[mark] && cancellation) { doingRequest[mark].cancel('Cancel the same request'); delete doingRequest[mark]; } doingRequest[mark] = axios.CancelToken.source(); config.cancelToken = doingRequest[mark].token; return config; }); axios.interceptors.response.use(response => { // do some response }, error => { if (axios.isCancel(error)) { return Promise.reject(error); } // else do some status reject; }) Copyright © Toobe 2020 all right reserved，powered by Gitbook修改时间 2020-03-26 11:57:18 "},"Games/NDS/黄金太阳-漆黑黎明.html":{"url":"Games/NDS/黄金太阳-漆黑黎明.html","title":"黄金太阳-漆黑黎明 金手指","keywords":"","body":"黄金太阳-漆黑黎明 金手指 !战斗结束获得经验值N倍 ::2倍 5212174C E0820000 1212174C 00000080 D0000000 00000000 ::4倍 5212174C E0820000 1212174C 00000100 D0000000 00000000 ::8倍 5212174C E0820000 1212174C 00000180 D0000000 00000000 ::16倍 5212174C E0820000 1212174C 00000200 D0000000 00000000 ::32倍 5212174C E0820000 1212174C 00000280 D0000000 00000000 ::64倍 5212174C E0820000 1212174C 00000300 D0000000 00000000 !战斗结束获得金钱N倍 ::2倍 52121740 E0863003 12121740 00003083 D0000000 00000000 ::4倍 52121740 E0863003 12121740 00003103 D0000000 00000000 ::8倍 52121740 E0863003 12121740 00003183 D0000000 00000000 ::16倍 52121740 E0863003 12121740 00003203 D0000000 00000000 ::32倍 52121740 E0863003 12121740 00003283 D0000000 00000000 ::64倍 52121740 E0863003 12121740 00003303 D0000000 00000000 Copyright © Toobe 2020 all right reserved，powered by Gitbook修改时间 2020-03-17 12:13:22 "},"Git/1-常用命令.html":{"url":"Git/1-常用命令.html","title":"Git 常用命令","keywords":"","body":"Git 常用命令 git push --force git add . git commit -m 'commit' Copyright © Toobe 2020 all right reserved，powered by Gitbook修改时间 2020-03-24 16:37:22 "},"Markdown/1-基础语法.html":{"url":"Markdown/1-基础语法.html","title":"基础语法","keywords":"","body":"基础语法 标题 # 一级标题 ## 二级标题 ### 三级标题 #### 四级标题 一级标题 二级标题 三级标题 四级标题 字体 **粗体** *斜体* ***斜体加粗*** ~~删除线~~ 粗体 斜体 斜体加粗 删除线 引用 >引用 >>引用 >>>>>>>引用 引用 引用 引用 分割线 --- ---- *** ***** 图片 ![图片](https://freedomljt.github.io/gitbook/assets/bg.png \"我是图片\") 超链接 [Gitbook](https://freedomljt.github.io/gitbook \"one book\") GitBook Gitbook GitBook 列表 - 列表 + 列表 * 列表 1. 有序列表 2. 有序列表 列表 列表 列表 有序列表 有序列表 表格 Name|Age|Money ----|---|---- Toobe|18|Bi Loong|28|Li Name Age Money Toobe 18 Bi Loong 28 Li Copyright © Toobe 2020 all right reserved，powered by Gitbook修改时间 2020-03-23 15:33:18 "},"Markdown/2-折叠语法.html":{"url":"Markdown/2-折叠语法.html","title":"折叠语法","keywords":"","body":"折叠语法 效果预览 Title Content 代码 Title Content Copyright © Toobe 2020 all right reserved，powered by Gitbook修改时间 2020-03-23 14:16:28 "},"Test/契约测试/":{"url":"Test/契约测试/","title":"契约测试","keywords":"","body":"契约测试 契约测试（Contract Test），又称为消费者驱动的契约测试（Consumer-Driven Contracts，简称CDC），顾名思义就是对契约进行测试。 契约 以结构化文档（json或yaml等）形式对服务接口的约定 契约测试 以契约作为唯一耦合点，验证提供者端的实现是否满足消费者端需求的过程 消费者驱动的契约测试 从消费者端的期望出发定义契约，并以契约驱动提供者端测试的过程 Copyright © Toobe 2020 all right reserved，powered by Gitbook修改时间 2020-03-23 11:07:09 "},"Test/契约测试/1-Mest.html":{"url":"Test/契约测试/1-Mest.html","title":"Mest","keywords":"","body":"Mest let mest = new Mest(); let resutls: IDiff = mest.localCompareInterface('FraudCheckResponse.ts', { status: FRAUD, rejectionReason: 'Amount too high' }); expect(resutls).toEqual({ diff: { local: ['fraudCheckStatus'], remote: ['status'] } }) Copyright © Toobe 2020 all right reserved，powered by Gitbook修改时间 2020-03-24 10:03:30 "},"Test/契约测试/2-Pact.html":{"url":"Test/契约测试/2-Pact.html","title":"2-Pact.md","keywords":"","body":"Copyright © Toobe 2020 all right reserved，powered by Gitbook修改时间 2020-03-23 11:07:49 "},"Tools/1-Sublime.html":{"url":"Tools/1-Sublime.html","title":"1-Sublime.md","keywords":"","body":"Copyright © Toobe 2020 all right reserved，powered by Gitbook修改时间 2020-03-23 11:13:58 "}}